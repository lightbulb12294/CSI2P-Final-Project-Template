name: build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: setup env
      run: echo "$(Get-Location)\MinGW\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

    - name: check env
      run: echo $env:PATH

    - name: download MinGW-w64-8.1.0
      run: Invoke-WebRequest http://140.114.85.195/public/upload/5d2079de0c/MinGW-w64-8.1.0.zip -OutFile MinGW-w64-8.1.0.zip
    - name: unzip MinGW-w64-8.1.0
      run: Expand-Archive MinGW-w64-8.1.0.zip MinGW

    - name: download allegro-5.2.7.0
      run: Invoke-WebRequest https://github.com/liballeg/allegro5/releases/download/5.2.7.0/allegro-x86_64-w64-mingw32-gcc-10.2.0-posix-seh-static-5.2.7.0.zip -OutFile allegro.zip
    - name: unzip allegro-5.2.7.0
      run: Expand-Archive allegro.zip ./

    - uses: actions/checkout@v4
      with:
        path: SourceCode

    - name: build
      run: cd SourceCode && make

    - name: check build
      run: ls SourceCode/game.exe

  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - name: install base dependencies
      run: sudo apt update && sudo apt install build-essential wget tar libgl1-mesa-dev libx11-dev libxcursor-dev cmake pkg-config git -y

    - name: install allegro font & image dependencies
      run: sudo apt install libfreetype-dev libpng-dev libjpeg-dev libfreeimage-dev -y

    - name: install allegro sound & video dependencies
      run: sudo apt install libdumb1-dev libflac-dev libogg-dev libvorbis-dev libopusfile-dev libtheora-dev libwebp-dev -y

    - name: download minimp3 support
      run: wget https://raw.githubusercontent.com/lieff/minimp3/refs/heads/master/minimp3.h && wget https://raw.githubusercontent.com/lieff/minimp3/refs/heads/master/minimp3_ex.h && sudo mv minimp3.h /usr/local/include && sudo mv minimp3_ex.h /usr/local/include

    - name: install allegro other dependencies
      run: sudo apt install libphysfs-dev libsdl2-dev libgtk-3-dev -y

    - name: download allegro-5.2.7.0
      run: wget https://github.com/liballeg/allegro5/releases/download/5.2.7.0/allegro-5.2.7.0.tar.gz

    - name: unzip allegro-5.2.7.0
      run: tar -xzf allegro-5.2.7.0.tar.gz

    - name: build allegro-5.2.7.0
      run: cd allegro-5.2.7.0 && mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DWANT_PKG_CONFIG=ON -DWANT_SHARED=ON .. && make -j8 && sudo make install && sudo ldconfig /usr/local/lib

    - uses: actions/checkout@v4
      with:
        path: SourceCode

    - name: build
      run: cd SourceCode && make

    - name: check build
      run: ls SourceCode/game

  build-macos-x86:
    runs-on: macos-13

    steps:
      - name: install brew
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: install base dependencies
        run: brew install cmake pkg-config git

      - name: install allegro font & image dependencies
        run: brew install freetype libpng jpeg freeimage

      - name: install allegro sound & video dependencies
        run: brew install dumb flac libogg libvorbis opusfile theora webp

      - name: download minimp3 support
        run: wget https://raw.githubusercontent.com/lieff/minimp3/refs/heads/master/minimp3.h && wget https://raw.githubusercontent.com/lieff/minimp3/refs/heads/master/minimp3_ex.h && sudo mv minimp3.h /usr/local/include && sudo mv minimp3_ex.h /usr/local/include

      - name: install allegro other dependencies
        run: brew install physfs sdl2 gtk+3

      - name: download allegro-5.2.7.0
        run: wget https://github.com/liballeg/allegro5/releases/download/5.2.7.0/allegro-5.2.7.0.tar.gz

      - name: unzip allegro-5.2.7.0
        run: tar -xzf allegro-5.2.7.0.tar.gz

      - name: build allegro-5.2.7.0
        run: cd allegro-5.2.7.0 && mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DWANT_PKG_CONFIG=ON -DWANT_SHARED=ON .. && make -j8 && sudo make install

      - name: export library path
        run: printf "LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\nDYLD_LIBRARY_PATH=/usr/local/lib:$DYLD_LIBRARY_PATH\n" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          path: SourceCode

      - name: build
        run: cd SourceCode && make

      - name: check build
        run: ls SourceCode/game
